# 方法1
# 时间复杂度: O(N^2)  空间复杂度: O(N)

class Solution:
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if numRows == 0:
            return []
        res = [[1]]
        for i in range(1, numRows):
            tmp = [1]
            for j in range(1, i):
                tmp.append(res[-1][j-1]+res[-1][j])
            tmp.append(1)
            res.append(tmp)
        return res

# 方法2
# 时间复杂度: O(N^2)  空间复杂度: O(N)

class Solution:
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        res = [[1]]
        for i in range(1, numRows):
            res.append(list(map(lambda x,y:x+y, [0]+res[-1], res[-1]+[0])))
        return res[:numRows]
