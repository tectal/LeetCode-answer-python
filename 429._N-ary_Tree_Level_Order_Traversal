# 时间复杂度：O(N)  空间复杂度：O(N)

"""
# Definition for a Node.
class Node:
    def __init__(self, val, children):
        self.val = val
        self.children = children
"""
class Solution:
    def levelOrder(self, root):
        """
        :type root: Node
        :rtype: List[List[int]]
        """
        if not root:
            return []
        
        res, cur_level = [], [root]
        while cur_level:
            tmp_res, next_level = [], []
            for node in cur_level:
                tmp_res.append(node.val)
                for child in node.children:
                    next_level.append(child)
            res.append(tmp_res)
            cur_level = next_level
        return res
