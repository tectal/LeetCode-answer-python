# 时间复杂度：O(N)  空间复杂度：O(1)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sumOfLeftLeaves(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        def leaf(node):
            if not node:
                return False
            elif not node.left and not node.right:
                return True
            else:
                return False
        
        sum = 0
        if root:
            if leaf(root.left):
                sum += root.left.val
            else:
                sum += self.sumOfLeftLeaves(root.left)
            sum += self.sumOfLeftLeaves(root.right)

        return sum
