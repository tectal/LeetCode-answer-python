# 方法1
# 时间复杂度：O(1)  空间复杂度：O(1)
# num & (num-1) == 0代表num的二进制表示中只有一个1
class Solution(object):
    def isPowerOfFour(self, num):
        """
        :type num: int
        :rtype: bool
        """
        return num % 3==1 and num & (num-1) == 0
        
# 递归
class Solution(object):
    def isPowerOfFour(self, num):
        """
        :type num: int
        :rtype: bool
        """
        if num < 0:
            return False
        elif num == 4:
            return True
        elif num % 4 == 0:
            return self.isPowerOfFour(num/4)
        return False
